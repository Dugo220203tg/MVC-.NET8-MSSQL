@using TDProjectMVC.Helpers
@using TDProjectMVC.ViewModels
@{
    string ADDRESS = "52 Triều Khúc, Thanh Xuân, Hà Nội";
    string PHONENUMBER = "0986236932";
    string EMAIL = " duong22tg@email.com";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <link href="~/Hinh/logo.png" type="image/x-icon" rel="icon">

    <title>TD-Web-Electro</title>

    <!-- Google font -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,500,700" rel="stylesheet">

    <!-- Bootstrap -->
    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Template Stylesheet -->
    <link href="~/css/style.css" rel="stylesheet">
    @*     <link href="~/css/AlterCSS.css" rel="stylesheet" />
    *@    <!-- Slick -->
    <link type="text/css" rel="stylesheet" href="~/css/slick.css" />
    <link type="text/css" rel="stylesheet" href="~/css/slick-theme.css" />

    <!-- nouislider -->
    <link type="text/css" rel="stylesheet" href="~/css/nouislider.min.css" />

    <!-- Font Awesome Icon -->
    <link rel="stylesheet" href="~/css/font-awesome.min.css">

    <!-- Custom stlylesheet -->
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    @RenderSection("Styles", required: false)

</head>
<body>
    <div>
        <!-- HEADER -->
        <header>
            <!-- TOP HEADER -->
            <div id="top-header">
                <div class="container">
                    <ul class="header-links pull-left">
                        <li><a href="#"><i class="fa fa-phone"></i>@PHONENUMBER</a></li>
                        <li><a href="#"><i class="fa fa-envelope-o"></i>@EMAIL</a></li>
                        <li><a href="#"><i class="fa fa-map-marker"></i>@ADDRESS</a></li>
                    </ul>
                    <ul class="header-links pull-right">
                        <li><a href="#"><i class="fa fa-dollar"></i> USD</a></li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li>
                                <a asp-action="Profile" asp-controller="KhachHang">
                                    <i class="fa fa-user-o"></i>@User.Identity.Name
                                </a>
                            </li>
                            <li><a asp-action="DangXuat" asp-controller="KhachHang">Đăng xuất</a></li>
                        }
                        else
                        {
                            <li><a href="/KhachHang/DangNhap">Login</a></li>
                        }
                    </ul>
                </div>
            </div>
            <!-- /TOP HEADER -->
            <!-- MAIN HEADER -->
            <div id="header">
                <!-- container -->
                <div class="container">
                    <!-- row -->
                    <div class="row">
                        <!-- LOGO -->
                        <div class="col-md-3">
                            <div class="header-logo">
                                <a href="/" class="logo">
                                    <img src="~/img/logo.png" alt="">
                                </a>
                            </div>
                        </div>
                        <!-- /LOGO -->
                        <!-- SEARCH BAR -->
                        <div class="col-md-6">
                            <div class="header-search">
                                <form>
                                    <select class="input-select">
                                        <option value="0">All Categories</option>
                                        <option value="1">Category 01</option>
                                        <option value="1">Category 02</option>
                                    </select>
                                    <input id="searchText" class="input" placeholder="Search here">
                                    <button id="searchButton" class="search-btn" type="button">Search</button>
                                </form>
                            </div>
                        </div>
                        <!-- /SEARCH BAR -->
                        <!-- ACCOUNT -->
                        <div class="col-md-3 clearfix">
                            <div class="header-ctn">
                                <!-- Wishlist -->
                                @await Component.InvokeAsync("WishList")
                                <!-- /Wishlist -->
                                <!-- Cart -->
                                <div class="dropdown">
                                    @await Component.InvokeAsync("CartProduct")
                                </div>
                                <!-- /Cart -->
                                <!-- Menu Toogle -->
                                <div class="menu-toggle">
                                    <a href="#">
                                        <i class="fa fa-bars"></i>
                                        <span>Menu</span>
                                    </a>
                                </div>
                                <!-- /Menu Toogle -->
                            </div>
                        </div>
                        <!-- /ACCOUNT -->
                    </div>
                    <!-- row -->
                </div>
                <!-- container -->
            </div>
            <!-- /MAIN HEADER -->
        </header>
        <!-- /HEADER -->
        <!-- NAVIGATION -->
        <nav id="navigation">
            <!-- container -->
            <div class="container">
                <!-- responsive-nav -->
                <div id="responsive-nav">
                    <!-- NAV -->
                    <ul class="main-nav nav navbar-nav">
                        <li><a href="/">Home</a></li>
                        @* <li><a href="#">Hot Deals</a></li> *@
                        <li><a href="/Product">Store</a></li>
                        @* 						<li><a href="/Detail">Shop Detail</a></li> *@
                        <li><a href="/Cart">Giỏ Hàng</a></li>
                        <li><a href="/KhachHang/DangKy">Register</a></li>
                    </ul>
                    <!-- /NAV -->
                </div>
                <!-- /responsive-nav -->
            </div>
            <!-- /container -->
        </nav>
        <!-- /NAVIGATION -->
        <div style="min-height:500px;">
            @RenderBody()
        </div>
        @await Html.PartialAsync("_Footer")
    </div>
    <!-- jQuery Plugins -->
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/slick.min.js"></script>
    <script src="~/js/nouislider.min.js"></script>
    <script src="~/js/jquery.zoom.min.js"></script>
    <script src="~/js/main.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/MyJS.js"></script>

    @RenderSection("scripts", required: false)
    <script>
        $(document).ready(function () {
            // Toggle dropdown on click
            $('.dropdown-toggle').on('click', function (e) {
                e.preventDefault();
                $(this).parent().toggleClass('open');
                $(this).attr('aria-expanded', function (index, attr) {
                    return attr === 'true' ? 'false' : 'true';
                });
            });

            // Close dropdown when clicking outside
            $(document).on('click', function (e) {
                if (!$(e.target).closest('.dropdown').length) {
                    $('.dropdown').removeClass('open');
                    $('.dropdown-toggle').attr('aria-expanded', 'false');
                }
            });

            // Pagination link click handler
            $(".page-link").click(function (e) {
                e.preventDefault();
                var page = $(this).text();
                console.log("Chuyển đến trang: " + page);
            });

            // Add to wishlist
            function addToWishlist(id) {
                $.ajax({
                    url: '/WishList/AddToWishList',
                    type: 'POST',
                    data: { MaHH: id },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công',
                                text: result.message,
                                showConfirmButton: false,
                                timer: 1500
                            });
                            updateWishList();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: result.message
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Đã xảy ra lỗi khi thêm sản phẩm vào danh sách yêu thích'
                        });
                    }
                });
            }

            function updateWishList() {
                $.ajax({
                    url: '/WishList/Index',
                    type: 'GET',
                    success: function (data) {
                        $('.wish-list').empty();
                        $.each(data, function (index, item) {
                            var productHtml = `
                            <div class="product-widget">
                                <div class="product-img" style="width:60px;height:60px">
                                    ${(() => {
                                    let firstImageUrl = '';
                                    if (item.hinh) {
                                        const imageUrls = item.hinh.split(',');
                                        if (imageUrls.length > 0) {
                                            firstImageUrl = imageUrls[0].trim();
                                        }
                                    }
                                    return firstImageUrl ?
                                        `<img src="/Hinh/Hinh/HangHoa/${item.maHH}/${firstImageUrl}" alt="${item.tenHH}" style="width:60px;height:60px">` :
                                        '';
                                })()}
                                </div>
                                <div class="product-body">
                                    <h2 class="product-name"><a href="#">${item.tenHH}</a></h2>
                                </div>
                                        <button class="delete" data-product-id="${item.MaYT}" onclick="RemoveWishList(${item.maYT}, this)">
                                    <i class="fa fa-close"></i>
                                </button>
                            </div>
                        `;
                            $('.wish-list').append(productHtml);
                        });

                        $('.wish-list .delete').on('click', function () {
                            var productId = $(this).data('product-id');
                            var productWidget = $(this).closest('.product-widget');
                            RemoveWishList(productId, productWidget);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                    }
                });
            }

            function RemoveWishList(id, element) {
                console.log(`Removing item with ID: ${id}`); // Debugging line

                $.ajax({
                    url: '/WishList/RemoveWishList',
                    type: 'POST',
                    data: { id: id },
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Xóa Thành công',
                                text: 'Đã xóa sản phẩm khỏi danh sách yêu thích',
                                showConfirmButton: false,
                                timer: 1000
                            });
                            $(element).closest('.product-widget').remove();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: result.message
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: error
                        });
                    }
                });
            }

            // Initialize wishlist
            $(document).ready(function () {
                updateWishList();
            });
    </script>

</body>
</html>
